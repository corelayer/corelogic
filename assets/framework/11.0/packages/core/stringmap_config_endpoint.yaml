name: stringmaps
tags:
  - core
sections:
  - name: appexpert.stringmaps
    elements:
      - name: CONFIG_ENDPOINT
        fields:
          - id: name
            data: <<prefix>>_CONFIG_ENDPOINT
            
          - id: ipv4_http_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=http;").TO_LOWER
          - id: ipv4_http_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_http_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_http_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_http_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_http_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value>>.VALUE("state").TO_LOWER
          - id: ipv4_http_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_state>>.EQ("enabled")
          - id: ipv4_http_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_state>>.EQ("disabled")
          - id: ipv4_http_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_state>>.EQ("maintenance")
          - id: ipv4_http_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_http_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_ipfilter>>.EQ("disabled")
          - id: ipv4_http_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_ipfilter>>.EQ("allow")
          - id: ipv4_http_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_http_value_ipfilter>>.EQ("block")

          - id: ipv6_http_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=http;").TO_LOWER
          - id: ipv6_http_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_http_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_http_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_http_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_http_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value>>.VALUE("state").TO_LOWER
          - id: ipv6_http_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_state>>.EQ("enabled")
          - id: ipv6_http_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_state>>.EQ("disabled")
          - id: ipv6_http_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_state>>.EQ("maintenance")
          - id: ipv6_http_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_http_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_ipfilter>>.EQ("disabled")
          - id: ipv6_http_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_ipfilter>>.EQ("allow")
          - id: ipv6_http_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_http_value_ipfilter>>.EQ("block")

          - id: ipv4_ssl_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl;").TO_LOWER
          - id: ipv4_ssl_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_ssl_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_ssl_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_ssl_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_ssl_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value>>.VALUE("state").TO_LOWER
          - id: ipv4_ssl_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_state>>.EQ("enabled")
          - id: ipv4_ssl_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_state>>.EQ("disabled")
          - id: ipv4_ssl_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_state>>.EQ("maintenance")
          - id: ipv4_ssl_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_ssl_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_ipfilter>>.EQ("disabled")
          - id: ipv4_ssl_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_ipfilter>>.EQ("allow")
          - id: ipv4_ssl_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssl_value_ipfilter>>.EQ("block")

          - id: ipv6_ssl_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl;").TO_LOWER
          - id: ipv6_ssl_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_ssl_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_ssl_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_ssl_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_ssl_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value>>.VALUE("state").TO_LOWER
          - id: ipv6_ssl_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_state>>.EQ("enabled")
          - id: ipv6_ssl_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_state>>.EQ("disabled")
          - id: ipv6_ssl_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_state>>.EQ("maintenance")
          - id: ipv6_ssl_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_ssl_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_ipfilter>>.EQ("disabled")
          - id: ipv6_ssl_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_ipfilter>>.EQ("allow")
          - id: ipv6_ssl_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssl_value_ipfilter>>.EQ("block")

          - id: ipv4_tcp_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=tcp;").TO_LOWER
          - id: ipv4_tcp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_tcp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_tcp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_tcp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_tcp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value>>.VALUE("state").TO_LOWER
          - id: ipv4_tcp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_state>>.EQ("enabled")
          - id: ipv4_tcp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_state>>.EQ("disabled")
          - id: ipv4_tcp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_state>>.EQ("maintenance")
          - id: ipv4_tcp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_tcp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_ipfilter>>.EQ("disabled")
          - id: ipv4_tcp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_ipfilter>>.EQ("allow")
          - id: ipv4_tcp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_tcp_value_ipfilter>>.EQ("block")

          - id: ipv6_tcp_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=tcp;").TO_LOWER
          - id: ipv6_tcp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_tcp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_tcp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_tcp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_tcp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value>>.VALUE("state").TO_LOWER
          - id: ipv6_tcp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_state>>.EQ("enabled")
          - id: ipv6_tcp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_state>>.EQ("disabled")
          - id: ipv6_tcp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_state>>.EQ("maintenance")
          - id: ipv6_tcp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_tcp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_ipfilter>>.EQ("disabled")
          - id: ipv6_tcp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_ipfilter>>.EQ("allow")
          - id: ipv6_tcp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_tcp_value_ipfilter>>.EQ("block")

          - id: ipv4_ssltcp_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl_tcp;").TO_LOWER
          - id: ipv4_ssltcp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_ssltcp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_ssltcp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_ssltcp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_ssltcp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value>>.VALUE("state").TO_LOWER
          - id: ipv4_ssltcp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_state>>.EQ("enabled")
          - id: ipv4_ssltcp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_state>>.EQ("disabled")
          - id: ipv4_ssltcp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_state>>.EQ("maintenance")
          - id: ipv4_ssltcp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_ssltcp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_ipfilter>>.EQ("disabled")
          - id: ipv4_ssltcp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_ipfilter>>.EQ("allow")
          - id: ipv4_ssltcp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_ssltcp_value_ipfilter>>.EQ("block")

          - id: ipv6_ssltcp_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl_tcp;").TO_LOWER
          - id: ipv6_ssltcp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_ssltcp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_ssltcp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_ssltcp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_ssltcp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value>>.VALUE("state").TO_LOWER
          - id: ipv6_ssltcp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_state>>.EQ("enabled")
          - id: ipv6_ssltcp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_state>>.EQ("disabled")
          - id: ipv6_ssltcp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_state>>.EQ("maintenance")
          - id: ipv6_ssltcp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_ssltcp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_ipfilter>>.EQ("disabled")
          - id: ipv6_ssltcp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_ipfilter>>.EQ("allow")
          - id: ipv6_ssltcp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_ssltcp_value_ipfilter>>.EQ("block")

          - id: ipv4_udp_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.UDP.DSTPORT + ";protocol=udp;").TO_LOWER
          - id: ipv4_udp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_udp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_udp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_udp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_udp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value>>.VALUE("state").TO_LOWER
          - id: ipv4_udp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_state>>.EQ("enabled")
          - id: ipv4_udp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_state>>.EQ("disabled")
          - id: ipv4_udp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_state>>.EQ("maintenance")
          - id: ipv4_udp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_udp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_ipfilter>>.EQ("disabled")
          - id: ipv4_udp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_ipfilter>>.EQ("allow")
          - id: ipv4_udp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_udp_value_ipfilter>>.EQ("block")

          - id: ipv6_udp_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.UDP.DSTPORT + ";protocol=udp;").TO_LOWER
          - id: ipv6_udp_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_udp_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_udp_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_udp_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_udp_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value>>.VALUE("state").TO_LOWER
          - id: ipv6_udp_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_state>>.EQ("enabled")
          - id: ipv6_udp_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_state>>.EQ("disabled")
          - id: ipv6_udp_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_state>>.EQ("maintenance")
          - id: ipv6_udp_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_udp_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_ipfilter>>.EQ("disabled")
          - id: ipv6_udp_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_ipfilter>>.EQ("allow")
          - id: ipv6_udp_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_udp_value_ipfilter>>.EQ("block")

          - id: ipv4_sslbridge_key
            data: ("vip=" + CLIENT.IP.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl_bridge;").TO_LOWER
          - id: ipv4_sslbridge_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv4_sslbridge_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv4_sslbridge_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value>>.VALUE("tenant").TO_LOWER
          - id: ipv4_sslbridge_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value>>.VALUE("vserver").TO_LOWER
          - id: ipv4_sslbridge_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value>>.VALUE("state").TO_LOWER
          - id: ipv4_sslbridge_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_state>>.EQ("enabled")
          - id: ipv4_sslbridge_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_state>>.EQ("disabled")
          - id: ipv4_sslbridge_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_state>>.EQ("maintenance")
          - id: ipv4_sslbridge_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv4_sslbridge_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_ipfilter>>.EQ("disabled")
          - id: ipv4_sslbridge_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_ipfilter>>.EQ("allow")
          - id: ipv4_sslbridge_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv4_sslbridge_value_ipfilter>>.EQ("block")

          - id: ipv6_sslbridge_key
            data: ("vip=" + CLIENT.IPV6.DST + ";port=" + CLIENT.TCP.DSTPORT + ";protocol=ssl_bridge;").TO_LOWER
          - id: ipv6_sslbridge_key_exists
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_key>>.IS_STRINGMAP_KEY("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>")
          - id: ipv6_sslbridge_value
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_key>>.MAP_STRING("<<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/name>>").TYPECAST_NVLIST_T(';','=')
          - id: ipv6_sslbridge_value_tenantid
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value>>.VALUE("tenant").TO_LOWER
          - id: ipv6_sslbridge_value_vserver
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value>>.VALUE("vserver").TO_LOWER
          - id: ipv6_sslbridge_value_state
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value>>.VALUE("state").TO_LOWER
          - id: ipv6_sslbridge_value_state_isenabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_state>>.EQ("enabled")
          - id: ipv6_sslbridge_value_state_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_state>>.EQ("disabled")
          - id: ipv6_sslbridge_value_state_ismaintenance
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_state>>.EQ("maintenance")
          - id: ipv6_sslbridge_value_ipfilter
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value>>.VALUE("ipfilter").TO_LOWER
          - id: ipv6_sslbridge_value_ipfilter_isdisabled
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_ipfilter>>.EQ("disabled")
          - id: ipv6_sslbridge_value_ipfilter_isallow
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_ipfilter>>.EQ("allow")
          - id: ipv6_sslbridge_value_ipfilter_isblock
            data: <<core.stringmaps.appexpert.stringmaps.CONFIG_ENDPOINT/ipv6_sslbridge_value_ipfilter>>.EQ("block")
        expressions:
          install: add policy stringmap <<name>>
          uninstall: rm policy stringmap <<name>>